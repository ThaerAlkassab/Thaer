{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Desktop\\\\bluehouse\\\\src\\\\components\\\\Home\\\\BookingSearch\\\\BookingSearch.js\",\n    _s = $RefreshSig$();\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Typography, withStyles, makeStyles } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport React, { useState } from \"react\";\nimport \"./BookingSearch.css\";\nimport { connect } from 'react-redux';\nimport { setSearchClicked } from '../../../redux/search/search.action';\nimport { setFirstDay } from '../../../redux/dates/dates.action';\nimport { setSecondDay } from '../../../redux/dates/dates.action';\nimport { setDayDifference } from '../../../redux/dates/dates.action';\nimport * as moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: \"4px\",\n    \"& input\": {\n      height: \"45px\"\n    },\n    \"& .MuiInputBase-input\": {\n      width: \"50%\"\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottom: \"none\",\n      content: \"none\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottom: \"none\",\n      content: \"none\"\n    },\n    \"& .MuiInput-formControl\": {\n      marginTop: \"0px\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }\n});\n\nconst BookingSearch = _ref => {\n  _s();\n\n  let {\n    setSearchClicked,\n    setFirstDay,\n    setSecondDay,\n    setDayDifference,\n    checkIn,\n    checkOut\n  } = _ref;\n  const [checkIns, setCheckIns] = useState(moment(checkIn).format('YYYY-MM-DD'));\n  const [checkOuts, setCheckOuts] = useState(moment(checkOut).format('YYYY-MM-DD'));\n  ;\n  const newCheckIn = new Date(checkIns);\n  const newCheckOut = new Date(checkOuts);\n  let timeDifference = newCheckOut.getTime() - newCheckIn.getTime();\n  let oldDayDifference = timeDifference / (1000 * 3600 * 24);\n  let dayDifference = Math.round(oldDayDifference);\n  const NewCheckIn = moment(checkIns).format('YYYYMMDD');\n  const NewCheckOut = moment(checkOuts).format('YYYYMMDD');\n  const classes = useStyles();\n\n  const handleCLick = () => {\n    if (dayDifference !== 0) {\n      setSearchClicked(true);\n      setFirstDay(NewCheckIn);\n      setSecondDay(NewCheckOut);\n      setDayDifference(dayDifference);\n    }\n  };\n\n  const TextTypography = withStyles({\n    root: {\n      fontSize: \"24px\",\n      fontWeight: \"bold\",\n      lineHeight: \"50px\",\n      fontFamily: \"Oblik\",\n      color: \"#14202B\",\n      width: \"50px\"\n    }\n  })(Typography);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(TextTypography, {\n        variant: \"h6\",\n        children: \"BEST PRICE GUARANTEED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mobile_title\",\n        children: \"BEST PRICE GUARANTEED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservation\",\n        children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Check In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              format: \"dd/MM/yyyy\",\n              autoOk: true,\n              value: checkIns,\n              disablePast: true,\n              InputAdornmentProps: {\n                position: \"start\"\n              },\n              onChange: setCheckIns,\n              className: classes.root\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labels\",\n              children: \"Check Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              autoOk: true,\n              disablePast: true,\n              variant: \"inline\",\n              format: \"dd/MM/yyyy\",\n              value: checkOuts,\n              InputAdornmentProps: {\n                position: \"start\"\n              },\n              onChange: setCheckOuts,\n              className: classes.root\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            children: \"Nights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: dayDifference,\n            type: \"text\",\n            readOnly: true,\n            className: \"nights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleCLick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookingSearch, \"MIaR3uhCO12UrwUhTRtmYQePN3A=\", false, function () {\n  return [useStyles];\n});\n\n_c = BookingSearch;\n\nconst mapDispatchToProps = dispatch => ({\n  setSearchClicked: click => dispatch(setSearchClicked(click)),\n  setFirstDay: date1 => dispatch(setFirstDay(date1)),\n  setSecondDay: date2 => dispatch(setSecondDay(date2)),\n  setDayDifference: dif => dispatch(setDayDifference(dif))\n});\n\nconst mapStateToProps = state => ({\n  checkIn: state.checkIn.firstDay,\n  checkOut: state.checkOut.secondDay\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingSearch\");","map":{"version":3,"sources":["C:/Users/Sandra/Desktop/bluehouse/src/components/Home/BookingSearch/BookingSearch.js"],"names":["DateFnsUtils","Typography","withStyles","makeStyles","MuiPickersUtilsProvider","KeyboardDatePicker","React","useState","connect","setSearchClicked","setFirstDay","setSecondDay","setDayDifference","moment","useStyles","root","backgroundColor","borderRadius","height","width","borderBottom","content","marginTop","display","justifyContent","BookingSearch","checkIn","checkOut","checkIns","setCheckIns","format","checkOuts","setCheckOuts","newCheckIn","Date","newCheckOut","timeDifference","getTime","oldDayDifference","dayDifference","Math","round","NewCheckIn","NewCheckOut","classes","handleCLick","TextTypography","fontSize","fontWeight","lineHeight","fontFamily","color","position","mapDispatchToProps","dispatch","click","date1","date2","dif","mapStateToProps","state","firstDay","secondDay"],"mappings":"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","sourcesContent":["import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Typography,\r\n  withStyles, \r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport React, { useState} from \"react\";\r\nimport \"./BookingSearch.css\";\r\nimport { connect } from 'react-redux';\r\nimport { setSearchClicked } from '../../../redux/search/search.action'\r\nimport { setFirstDay } from '../../../redux/dates/dates.action'\r\nimport { setSecondDay } from '../../../redux/dates/dates.action'\r\nimport { setDayDifference } from '../../../redux/dates/dates.action'\r\nimport * as moment from 'moment'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"4px\",\r\n    \"& input\": {\r\n      height: \"45px\",\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      width: \"50%\",\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n      content: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n      content: \"none\",\r\n    },\r\n    \"& .MuiInput-formControl\": {\r\n      marginTop: \"0px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n});\r\n\r\nconst BookingSearch = ({ setSearchClicked, setFirstDay, setSecondDay,setDayDifference, checkIn, checkOut}) => {\r\n\r\n\r\n  const [checkIns, setCheckIns] = useState(moment(checkIn).format('YYYY-MM-DD'));\r\n  const [checkOuts, setCheckOuts] = useState(moment(checkOut).format('YYYY-MM-DD'));;\r\n\r\n  const newCheckIn = new Date(checkIns)\r\n  const newCheckOut = new Date(checkOuts)\r\n\r\n  let timeDifference = newCheckOut.getTime() - newCheckIn.getTime();\r\n  let oldDayDifference = timeDifference / (1000 * 3600 * 24);\r\n  let dayDifference = Math.round(oldDayDifference)\r\n  \r\n  const NewCheckIn = moment(checkIns).format('YYYYMMDD')\r\n  const NewCheckOut = moment(checkOuts).format('YYYYMMDD')\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleCLick = () => {\r\n    if (dayDifference !== 0) { \r\n      setSearchClicked(true);\r\n      setFirstDay(NewCheckIn);\r\n      setSecondDay(NewCheckOut);\r\n      setDayDifference(dayDifference);\r\n    }\r\n  }\r\n  \r\nconst TextTypography = withStyles({\r\n  root: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    lineHeight: \"50px\",\r\n    fontFamily: \"Oblik\",\r\n    color: \"#14202B\",\r\n    width: \"50px\"\r\n  }\r\n})(Typography);\r\n\r\n  return (\r\n    <div className=\"search_container\">\r\n      <div className=\"sidebar\">\r\n        <TextTypography variant=\"h6\">BEST PRICE GUARANTEED</TextTypography>\r\n      </div>\r\n      <div className=\"booking\" >\r\n        <h3 className=\"mobile_title\">BEST PRICE GUARANTEED</h3>\r\n        <div className=\"reservation\">\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <div className=\"search-fields\">\r\n                <label className=\"labels\" >Check In</label>\r\n                <KeyboardDatePicker\r\n                  format=\"dd/MM/yyyy\"\r\n                  autoOk\r\n                  value={checkIns}\r\n                  disablePast\r\n                  InputAdornmentProps={{ position: \"start\" }}\r\n                  onChange={setCheckIns}\r\n                  className={classes.root}\r\n                />\r\n              </div>\r\n              <div className=\"search-fields\">\r\n                <label className=\"labels\" >Check Out</label>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  disablePast\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={checkOuts}\r\n                  InputAdornmentProps={{ position: \"start\" }}\r\n                  onChange={setCheckOuts}\r\n                  className={classes.root}\r\n                />\r\n              </div>\r\n            </MuiPickersUtilsProvider>\r\n          <div className=\"search-fields\">\r\n            <label className=\"labels\">Nights</label>\r\n            <input\r\n              value={dayDifference}\r\n              type=\"text\"\r\n              readOnly\r\n              className=\"nights\"\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"search-button\"\r\n            onClick={handleCLick}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSearchClicked: click => dispatch(setSearchClicked(click)),\r\n  setFirstDay: date1 => dispatch(setFirstDay(date1)),\r\n  setSecondDay: date2 => dispatch(setSecondDay(date2)),\r\n  setDayDifference: dif =>  dispatch(setDayDifference(dif))\r\n  \r\n});\r\nconst mapStateToProps = state => ({\r\n  checkIn: state.checkIn.firstDay,\r\n  checkOut: state.checkOut.secondDay\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookingSearch);"]},"metadata":{},"sourceType":"module"}