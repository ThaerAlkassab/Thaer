{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Desktop\\\\bluehouse\\\\src\\\\components\\\\header\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton, MenuItem, makeStyles, Link } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport SearchImage from \"../../images/SearchIcon_Header.png\";\nimport keywords from \"./keywords.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  SearchIcon: {\n    marginRight: \"31px\",\n    \"&:hover\": {\n      \"& #searchBar\": {\n        right: \"40px\",\n        width: \"344px\"\n      }\n    }\n  },\n  searchBar: {\n    top: \"20px\",\n    right: \"-344px\",\n    width: \"0\",\n    height: \"66px\",\n    border: \"2px solid #14202B\",\n    borderRadius: \"5px\",\n    position: \"fixed\",\n    zIndex: 1,\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    transitionDuration: \"1s\",\n    \"& input\": {\n      padding: \"25px\",\n      width: \"100%\",\n      height: \"100%\",\n      display: \"block\",\n      boxSizing: \"border-box\",\n      fontSize: \"20px\",\n      fontWeight: 400,\n      lineHeight: \"20px\",\n      letterSpacing: \"0em\",\n      border: \"none\"\n    },\n    \"& button\": {\n      border: \"none\",\n      margin: \"0\"\n    }\n  },\n  searchResultStyle: {\n    top: \"calc(100% + 2px)\",\n    right: \"-2px\",\n    width: \"calc(100% + 2px)\",\n    position: \"absolute\",\n    background: \"#fff\",\n    paddingTop: \"5px\",\n    borderRadius: \"5px\",\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n    padding: \"15px 0 !important\",\n    maxHeight: \"70vh\",\n    overflow: \"auto\",\n    \"& .link\": {\n      color: \"#000 !important\",\n      \"& :hover\": {\n        textDecoration: \"none\",\n        background: \"#073762\",\n        color: \"#fff\"\n      }\n    }\n  }\n}));\n\nfunction SearchResult(_ref) {\n  let {\n    pageUrl,\n    text\n  } = _ref;\n  const Component = pageUrl.includes(\"http\") ? Link : RouterLink;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"link\",\n    component: Component,\n    href: pageUrl,\n    to: pageUrl,\n    target: \"_blank\",\n    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SearchResult;\nexport default function Search() {\n  _s();\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResult, setSearchResult] = useState();\n  const {\n    SearchIcon,\n    searchBar,\n    searchResultStyle\n  } = useStyles();\n\n  const searchFor = () => {\n    if (searchInput.length < 3) {\n      setSearchResult(\"please write a complete \\n word\");\n      return;\n    }\n\n    const searchInputToUpperCase = searchInput.toUpperCase();\n    const seperatedWords = searchInputToUpperCase.split(\" \");\n    const identicalResult = [];\n    const almosTheSame = [];\n    const containsSomeKeywords = [];\n    let FsearcshResult = [];\n    Object.keys(keywords).forEach(keyword => {\n      const keywordToUpperCase = keyword.toUpperCase();\n\n      if (keywordToUpperCase === searchInputToUpperCase) {\n        identicalResult.push(keyword);\n        return true;\n      }\n\n      if (searchInputToUpperCase.includes(keywordToUpperCase) || keywordToUpperCase.includes(searchInputToUpperCase)) {\n        almosTheSame.push(keyword);\n        return true;\n      }\n\n      for (let index = 0; index < seperatedWords.length; index++) {\n        if (seperatedWords[index].includes(keywordToUpperCase) || keywordToUpperCase.includes(seperatedWords[index])) {\n          containsSomeKeywords.push(keyword);\n          return true;\n        }\n      }\n\n      return false;\n    });\n\n    if (identicalResult.length > 0) {\n      FsearcshResult = identicalResult;\n    } else if (almosTheSame.length > 0) {\n      FsearcshResult = almosTheSame;\n    } else if (containsSomeKeywords.length > 0) {\n      FsearcshResult = containsSomeKeywords;\n    } else {\n      FsearcshResult = \"Not Found\";\n    }\n\n    setSearchResult(FsearcshResult);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      disableRipple: true,\n      className: SearchIcon,\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchImage,\n        alt: \"SearchIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: searchBar,\n        id: \"searchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setSearchInput(e.target.value);\n          },\n          placeholder: \"SEARCH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          disableRipple: true,\n          onClick: e => {\n            e.preventDefault();\n            searchFor();\n          },\n          type: \"submit\",\n          className: SearchIcon,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchImage,\n            alt: \"SearchIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), searchResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: searchResultStyle,\n          children: Array.isArray(searchResult) ? searchResult.map((item, i) => {\n            if (Array.isArray(keywords[item])) return keywords[item].map((link, index) => {\n              return /*#__PURE__*/_jsxDEV(SearchResult, {\n                pageUrl: link,\n                text: item + \" : \" + ++index\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 25\n              }, this);\n            });\n            return /*#__PURE__*/_jsxDEV(SearchResult, {\n              pageUrl: keywords[item],\n              text: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 26\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: searchResult\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"KGXN2nHeNGy773HGDJ/p1Oopgr0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchResult\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["C:/Users/Sandra/Desktop/bluehouse/src/components/header/search.js"],"names":["IconButton","MenuItem","makeStyles","Link","RouterLink","useState","SearchImage","keywords","useStyles","theme","SearchIcon","marginRight","right","width","searchBar","top","height","border","borderRadius","position","zIndex","display","backgroundColor","transitionDuration","padding","boxSizing","fontSize","fontWeight","lineHeight","letterSpacing","margin","searchResultStyle","background","paddingTop","boxShadow","maxHeight","overflow","color","textDecoration","SearchResult","pageUrl","text","Component","includes","Search","searchInput","setSearchInput","searchResult","setSearchResult","searchFor","length","searchInputToUpperCase","toUpperCase","seperatedWords","split","identicalResult","almosTheSame","containsSomeKeywords","FsearcshResult","Object","keys","forEach","keyword","keywordToUpperCase","push","index","e","target","value","preventDefault","Array","isArray","map","item","i","link"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2CC,IAA3C,QAAuD,mBAAvD;AACA,SAASA,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE,MADH;AAEV,eAAW;AACT,sBAAgB;AACdC,QAAAA,KAAK,EAAE,MADO;AAEdC,QAAAA,KAAK,EAAE;AAFO;AADP;AAFD,GAD2B;AAWvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,GAAG,EAAE,MADI;AAETH,IAAAA,KAAK,EAAE,QAFE;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITG,IAAAA,MAAM,EAAE,MAJC;AAKTC,IAAAA,MAAM,EAAE,mBALC;AAMTC,IAAAA,YAAY,EAAE,KANL;AAOTC,IAAAA,QAAQ,EAAE,OAPD;AAQTC,IAAAA,MAAM,EAAE,CARC;AASTC,IAAAA,OAAO,EAAE,MATA;AAUTC,IAAAA,eAAe,EAAE,MAVR;AAWTC,IAAAA,kBAAkB,EAAE,IAXX;AAaT,eAAW;AACTC,MAAAA,OAAO,EAAE,MADA;AAETX,MAAAA,KAAK,EAAE,MAFE;AAGTG,MAAAA,MAAM,EAAE,MAHC;AAITK,MAAAA,OAAO,EAAE,OAJA;AAKTI,MAAAA,SAAS,EAAE,YALF;AAMTC,MAAAA,QAAQ,EAAE,MAND;AAOTC,MAAAA,UAAU,EAAE,GAPH;AAQTC,MAAAA,UAAU,EAAE,MARH;AASTC,MAAAA,aAAa,EAAE,KATN;AAUTZ,MAAAA,MAAM,EAAE;AAVC,KAbF;AAyBT,gBAAY;AACVA,MAAAA,MAAM,EAAE,MADE;AAEVa,MAAAA,MAAM,EAAE;AAFE;AAzBH,GAX4B;AA0CvCC,EAAAA,iBAAiB,EAAE;AACjBhB,IAAAA,GAAG,EAAE,kBADY;AAEjBH,IAAAA,KAAK,EAAE,MAFU;AAGjBC,IAAAA,KAAK,EAAE,kBAHU;AAIjBM,IAAAA,QAAQ,EAAE,UAJO;AAKjBa,IAAAA,UAAU,EAAE,MALK;AAMjBC,IAAAA,UAAU,EAAE,KANK;AAOjBf,IAAAA,YAAY,EAAE,KAPG;AAQjBgB,IAAAA,SAAS,EAAE,iCARM;AASjBV,IAAAA,OAAO,EAAE,mBATQ;AAUjBW,IAAAA,SAAS,EAAE,MAVM;AAWjBC,IAAAA,QAAQ,EAAE,MAXO;AAYjB,eAAW;AACTC,MAAAA,KAAK,EAAE,iBADE;AAET,kBAAY;AACVC,QAAAA,cAAc,EAAE,MADN;AAEVN,QAAAA,UAAU,EAAE,SAFF;AAGVK,QAAAA,KAAK,EAAE;AAHG;AAFH;AAZM;AA1CoB,CAAZ,CAAD,CAA5B;;AAiEA,SAASE,YAAT,OAAyC;AAAA,MAAnB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAmB;AACvC,QAAMC,SAAS,GAAGF,OAAO,CAACG,QAAR,CAAiB,MAAjB,IAA2BxC,IAA3B,GAAkCC,UAApD;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,EAAEsC,SAFb;AAGE,IAAA,IAAI,EAAEF,OAHR;AAIE,IAAA,EAAE,EAAEA,OAJN;AAKE,IAAA,MAAM,EAAC,QALT;AAAA,2BAOE,QAAC,QAAD;AAAA,gBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAdQF,Y;AAgBT,eAAe,SAASK,MAAT,GAAkB;AAAA;;AAE/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0C,YAAD,EAAeC,eAAf,IAAkC3C,QAAQ,EAAhD;AACA,QAAM;AAAEK,IAAAA,UAAF;AAAcI,IAAAA,SAAd;AAAyBiB,IAAAA;AAAzB,MAA+CvB,SAAS,EAA9D;;AACA,QAAMyC,SAAS,GAAG,MAAM;AACtB,QAAIJ,WAAW,CAACK,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BF,MAAAA,eAAe,CAAC,iCAAD,CAAf;AACA;AACD;;AACD,UAAMG,sBAAsB,GAAGN,WAAW,CAACO,WAAZ,EAA/B;AACA,UAAMC,cAAc,GAAGF,sBAAsB,CAACG,KAAvB,CAA6B,GAA7B,CAAvB;AACA,UAAMC,eAAe,GAAG,EAAxB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,oBAAoB,GAAG,EAA7B;AACA,QAAIC,cAAc,GAAG,EAArB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYrD,QAAZ,EAAsBsD,OAAtB,CAA+BC,OAAD,IAAa;AACzC,YAAMC,kBAAkB,GAAGD,OAAO,CAACV,WAAR,EAA3B;;AACA,UAAIW,kBAAkB,KAAKZ,sBAA3B,EAAmD;AACjDI,QAAAA,eAAe,CAACS,IAAhB,CAAqBF,OAArB;AACA,eAAO,IAAP;AACD;;AACD,UACEX,sBAAsB,CAACR,QAAvB,CAAgCoB,kBAAhC,KACAA,kBAAkB,CAACpB,QAAnB,CAA4BQ,sBAA5B,CAFF,EAGE;AACAK,QAAAA,YAAY,CAACQ,IAAb,CAAkBF,OAAlB;AACA,eAAO,IAAP;AACD;;AACD,WAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGZ,cAAc,CAACH,MAA3C,EAAmDe,KAAK,EAAxD,EAA4D;AAC1D,YACEZ,cAAc,CAACY,KAAD,CAAd,CAAsBtB,QAAtB,CAA+BoB,kBAA/B,KACAA,kBAAkB,CAACpB,QAAnB,CAA4BU,cAAc,CAACY,KAAD,CAA1C,CAFF,EAGE;AACAR,UAAAA,oBAAoB,CAACO,IAArB,CAA0BF,OAA1B;AACA,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAvBD;;AAwBA,QAAIP,eAAe,CAACL,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BQ,MAAAA,cAAc,GAAGH,eAAjB;AACD,KAFD,MAEO,IAAIC,YAAY,CAACN,MAAb,GAAsB,CAA1B,EAA6B;AAClCQ,MAAAA,cAAc,GAAGF,YAAjB;AACD,KAFM,MAEA,IAAIC,oBAAoB,CAACP,MAArB,GAA8B,CAAlC,EAAqC;AAC1CQ,MAAAA,cAAc,GAAGD,oBAAjB;AACD,KAFM,MAEA;AACLC,MAAAA,cAAc,GAAG,WAAjB;AACD;;AACDV,IAAAA,eAAe,CAACU,cAAD,CAAf;AACD,GA7CD;;AA+CA,sBACE;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,aAAa,MADf;AAEE,MAAA,SAAS,EAAEhD,UAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,oBAAW,MAJb;AAAA,8BAME;AAAK,QAAA,GAAG,EAAEJ,WAAV;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAM,QAAA,SAAS,EAAEQ,SAAjB;AAA4B,QAAA,EAAE,EAAC,WAA/B;AAAA,gCACE;AACE,UAAA,QAAQ,EAAGoD,CAAD,IAAO;AACfpB,YAAAA,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,WAHH;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AACE,UAAA,aAAa,MADf;AAEE,UAAA,OAAO,EAAGF,CAAD,IAAO;AACdA,YAAAA,CAAC,CAACG,cAAF;AACApB,YAAAA,SAAS;AACV,WALH;AAME,UAAA,IAAI,EAAC,QANP;AAOE,UAAA,SAAS,EAAEvC,UAPb;AAQE,UAAA,KAAK,EAAC,SARR;AASE,wBAAW,MATb;AAAA,iCAWE;AAAK,YAAA,GAAG,EAAEJ,WAAV;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,gBAPF,EAoBGyC,YAAY,iBACX;AAAK,UAAA,SAAS,EAAEhB,iBAAhB;AAAA,oBACGuC,KAAK,CAACC,OAAN,CAAcxB,YAAd,IACCA,YAAY,CAACyB,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,gBAAIJ,KAAK,CAACC,OAAN,CAAchE,QAAQ,CAACkE,IAAD,CAAtB,CAAJ,EACE,OAAOlE,QAAQ,CAACkE,IAAD,CAAR,CAAeD,GAAf,CAAmB,CAACG,IAAD,EAAOV,KAAP,KAAiB;AACzC,kCACE,QAAC,YAAD;AACE,gBAAA,OAAO,EAAEU,IADX;AAGE,gBAAA,IAAI,EAAEF,IAAI,GAAG,KAAP,GAAe,EAAER;AAHzB,iBAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,sBADF;AAOD,aARM,CAAP;AASF,gCAAO,QAAC,YAAD;AAAc,cAAA,OAAO,EAAE1D,QAAQ,CAACkE,IAAD,CAA/B;AAAuC,cAAA,IAAI,EAAEA;AAA7C,eAAwDC,CAAxD;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAZD,CADD,gBAeC;AAAA,sBAAG3B;AAAH;AAhBJ;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsDD;;GA1GuBH,M;UAI+BpC,S;;;MAJ/BoC,M","sourcesContent":["import { IconButton, MenuItem, makeStyles, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport SearchImage from \"../../images/SearchIcon_Header.png\";\r\nimport keywords from \"./keywords.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  SearchIcon: {\r\n    marginRight: \"31px\",\r\n    \"&:hover\": {\r\n      \"& #searchBar\": {\r\n        right: \"40px\",\r\n        width: \"344px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  searchBar: {\r\n    top: \"20px\",\r\n    right: \"-344px\",\r\n    width: \"0\",\r\n    height: \"66px\",\r\n    border: \"2px solid #14202B\",\r\n    borderRadius: \"5px\",\r\n    position: \"fixed\",\r\n    zIndex: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    transitionDuration: \"1s\",\r\n\r\n    \"& input\": {\r\n      padding: \"25px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"block\",\r\n      boxSizing: \"border-box\",\r\n      fontSize: \"20px\",\r\n      fontWeight: 400,\r\n      lineHeight: \"20px\",\r\n      letterSpacing: \"0em\",\r\n      border: \"none\",\r\n    },\r\n    \"& button\": {\r\n      border: \"none\",\r\n      margin: \"0\",\r\n    },\r\n  },\r\n\r\n  searchResultStyle: {\r\n    top: \"calc(100% + 2px)\",\r\n    right: \"-2px\",\r\n    width: \"calc(100% + 2px)\",\r\n    position: \"absolute\",\r\n    background: \"#fff\",\r\n    paddingTop: \"5px\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n    padding: \"15px 0 !important\",\r\n    maxHeight: \"70vh\",\r\n    overflow: \"auto\",\r\n    \"& .link\": {\r\n      color: \"#000 !important\",\r\n      \"& :hover\": {\r\n        textDecoration: \"none\",\r\n        background: \"#073762\",\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SearchResult({ pageUrl, text }) {\r\n  const Component = pageUrl.includes(\"http\") ? Link : RouterLink;\r\n\r\n  return (\r\n    <Link\r\n      className=\"link\"\r\n      component={Component}\r\n      href={pageUrl}\r\n      to={pageUrl}\r\n      target=\"_blank\"\r\n    >\r\n      <MenuItem>{text}</MenuItem>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default function Search() {\r\n  \r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState();\r\n  const { SearchIcon, searchBar, searchResultStyle } = useStyles();\r\n  const searchFor = () => {\r\n    if (searchInput.length < 3) {\r\n      setSearchResult(\"please write a complete \\n word\");\r\n      return;\r\n    }\r\n    const searchInputToUpperCase = searchInput.toUpperCase();\r\n    const seperatedWords = searchInputToUpperCase.split(\" \");\r\n    const identicalResult = [];\r\n    const almosTheSame = [];\r\n    const containsSomeKeywords = [];\r\n    let FsearcshResult = [];\r\n    Object.keys(keywords).forEach((keyword) => {\r\n      const keywordToUpperCase = keyword.toUpperCase();\r\n      if (keywordToUpperCase === searchInputToUpperCase) {\r\n        identicalResult.push(keyword);\r\n        return true;\r\n      }\r\n      if (\r\n        searchInputToUpperCase.includes(keywordToUpperCase) ||\r\n        keywordToUpperCase.includes(searchInputToUpperCase)\r\n      ) {\r\n        almosTheSame.push(keyword);\r\n        return true;\r\n      }\r\n      for (let index = 0; index < seperatedWords.length; index++) {\r\n        if (\r\n          seperatedWords[index].includes(keywordToUpperCase) ||\r\n          keywordToUpperCase.includes(seperatedWords[index])\r\n        ) {\r\n          containsSomeKeywords.push(keyword);\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    if (identicalResult.length > 0) {\r\n      FsearcshResult = identicalResult;\r\n    } else if (almosTheSame.length > 0) {\r\n      FsearcshResult = almosTheSame;\r\n    } else if (containsSomeKeywords.length > 0) {\r\n      FsearcshResult = containsSomeKeywords;\r\n    } else {\r\n      FsearcshResult = \"Not Found\";\r\n    }\r\n    setSearchResult(FsearcshResult);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        disableRipple\r\n        className={SearchIcon}\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n      >\r\n        <img src={SearchImage} alt=\"SearchIcon\" />\r\n        <form className={searchBar} id=\"searchBar\">\r\n          <input\r\n            onChange={(e) => {\r\n              setSearchInput(e.target.value);\r\n            }}\r\n            placeholder=\"SEARCH\"\r\n          />\r\n          <IconButton\r\n            disableRipple\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              searchFor();\r\n            }}\r\n            type=\"submit\"\r\n            className={SearchIcon}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <img src={SearchImage} alt=\"SearchIcon\" />\r\n          </IconButton>\r\n          {searchResult && (\r\n            <div className={searchResultStyle}>\r\n              {Array.isArray(searchResult) ? (\r\n                searchResult.map((item, i) => {\r\n                  if (Array.isArray(keywords[item]))\r\n                    return keywords[item].map((link, index) => {\r\n                      return (\r\n                        <SearchResult\r\n                          pageUrl={link}\r\n                          key={index}\r\n                          text={item + \" : \" + ++index}\r\n                        />\r\n                      );\r\n                    });\r\n                  return <SearchResult pageUrl={keywords[item]} text={item} key={i} />;\r\n                })\r\n              ) : (\r\n                <>{searchResult}</>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </IconButton>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}