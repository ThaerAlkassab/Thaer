{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Desktop\\\\bluehouse\\\\src\\\\translating\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport languagesAndCodes from \"./languagesAndCodes.json\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Select from \"../images/select.svg\";\nimport { useEffect, useState } from \"react\";\nimport translate from \"translate\"; // New wave\n\nimport React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntranslate.key = \"AIzaSyCUHODQdM_bHGlEFtmbttq3O1xIB2rRz5E\";\nconst useStyles = makeStyles(theme => ({\n  dropDownButton: {\n    fontSize: \"18px\",\n    fontWeight: \"400\",\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"21px\",\n    backgroundColor: \"inherit\",\n    border: \"none\",\n    color: \"#fff\",\n    justifyContent: \"space-between\",\n    textTransform: \"none\"\n  },\n  menu: {\n    \"& .MuiPaper-root\": {\n      left: \"unset !important\",\n      right: \"17px\",\n      width: \"735px\",\n      maxWidth: \"calc(90vw - 18px)\",\n      padding: \"35px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        left: \"0\",\n        right: \"unset !important\",\n        width: \"70%\",\n        padding: \"10px\"\n      },\n      \"& ul\": {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n          flexDirection: \"column\"\n        },\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        \"& li\": {\n          border: \"1px solid rgba(5, 56, 112, 0.2)\",\n          boxSizing: \"border-box\",\n          \"&:hover\": {\n            background: \"#053870\",\n            color: \"#fff\"\n          }\n        }\n      }\n    }\n  }\n}));\nexport default function TranslateMe(_ref) {\n  _s();\n\n  let {\n    scroll\n  } = _ref;\n  const {\n    dropDownButton,\n    menu\n  } = useStyles();\n  const [selectedLanguage, setLanguage] = useState(0);\n\n  const handleChang = index => {\n    scroll();\n    setLanguage(index);\n    localStorage.setItem(\"languageIndex\", index);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const getSelectedLanguageIndex = JSON.parse(localStorage.getItem(\"languageIndex\"));\n    if (!getSelectedLanguageIndex) return localStorage.setItem(\"languageIndex\", selectedLanguage);\n    return setLanguage(getSelectedLanguageIndex);\n  }, [setLanguage, selectedLanguage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: dropDownButton,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: [selectedLanguage === 0 ? \"Select Language\" : languagesAndCodes.languages[selectedLanguage].lang, /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"down arrow\",\n        src: Select\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      className: menu,\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: languagesAndCodes.languages.map((_ref2, index) => {\n        let {\n          lang\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            handleClose();\n            handleChang(index);\n          },\n          children: lang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TranslateMe, \"BgF6WoXUAhse/rXQwQ3kc1/tgyA=\", false, function () {\n  return [useStyles];\n});\n\n_c = TranslateMe;\nexport async function translateMyText() {\n  let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const {\n    languages\n  } = languagesAndCodes;\n  const langIndex = localStorage.getItem(\"languageIndex\");\n  const lang = languages[langIndex];\n  const result = await translate(text, lang.code);\n  return result;\n}\nexport function WithTransLate(_ref3) {\n  _s2();\n\n  let {\n    text,\n    isFunction\n  } = _ref3;\n  const [translatedText, setTranslatedText] = useState(text);\n  translateMyText(text).then(res => {\n    setTranslatedText(res);\n  }).catch(err => console.log(err));\n  return isFunction ? translatedText : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: translatedText\n  }, void 0, false);\n}\n\n_s2(WithTransLate, \"+iDbHIkmUMr5IxRn/vgUniU7NRU=\");\n\n_c2 = WithTransLate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TranslateMe\");\n$RefreshReg$(_c2, \"WithTransLate\");","map":{"version":3,"sources":["C:/Users/Sandra/Desktop/bluehouse/src/translating/index.js"],"names":["languagesAndCodes","makeStyles","useEffect","useState","translate","React","Menu","MenuItem","Button","key","useStyles","theme","dropDownButton","fontSize","fontWeight","display","alignItems","height","backgroundColor","border","color","justifyContent","textTransform","menu","left","right","width","maxWidth","padding","breakpoints","down","flexDirection","flexWrap","boxSizing","background","TranslateMe","scroll","selectedLanguage","setLanguage","handleChang","index","localStorage","setItem","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","getSelectedLanguageIndex","JSON","parse","getItem","languages","lang","Select","Boolean","map","translateMyText","text","langIndex","result","code","WithTransLate","isFunction","translatedText","setTranslatedText","then","res","catch","err","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport languagesAndCodes from \"./languagesAndCodes.json\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Select from \"../images/select.svg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport translate from \"translate\"; // New wave\r\nimport React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\ntranslate.key = \"AIzaSyCUHODQdM_bHGlEFtmbttq3O1xIB2rRz5E\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropDownButton: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"400\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"21px\",\r\n    backgroundColor: \"inherit\",\r\n    border: \"none\",\r\n    color: \"#fff\",\r\n    justifyContent: \"space-between\",\r\n    textTransform: \"none\",\r\n  },\r\n\r\n  menu: {\r\n    \"& .MuiPaper-root\": {\r\n      left: \"unset !important\",\r\n      right: \"17px\",\r\n      width: \"735px\",\r\n      maxWidth: \"calc(90vw - 18px)\",\r\n      padding: \"35px\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        left: \"0\",\r\n        right: \"unset !important\",\r\n        width: \"70%\",\r\n        padding: \"10px\",\r\n      },\r\n      \"& ul\": {\r\n        display: \"flex\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          flexDirection: \"column\",\r\n        },\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        \"& li\": {\r\n          border: \"1px solid rgba(5, 56, 112, 0.2)\",\r\n          boxSizing: \"border-box\",\r\n          \"&:hover\": {\r\n            background: \"#053870\",\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function TranslateMe({ scroll }) {\r\n  const { dropDownButton, menu } = useStyles();\r\n  const [selectedLanguage, setLanguage] = useState(0);\r\n\r\n  const handleChang = (index) => {\r\n    scroll();\r\n    setLanguage(index);\r\n    localStorage.setItem(\"languageIndex\", index);\r\n  };\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    const getSelectedLanguageIndex = JSON.parse(\r\n      localStorage.getItem(\"languageIndex\")\r\n    );\r\n    if (!getSelectedLanguageIndex)\r\n      return localStorage.setItem(\"languageIndex\", selectedLanguage);\r\n    return setLanguage(getSelectedLanguageIndex);\r\n  }, [setLanguage, selectedLanguage]);\r\n\r\n  return (\r\n    <div>\r\n     <Button\r\n        className={dropDownButton}\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {selectedLanguage === 0\r\n          ? \"Select Language\"\r\n          : languagesAndCodes.languages[selectedLanguage].lang}\r\n        <img alt=\"down arrow\" src={Select} />\r\n      </Button> \r\n      <Menu\r\n        className={menu}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {languagesAndCodes.languages.map(({ lang }, index) => (\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleClose();\r\n              handleChang(index);\r\n            }}\r\n          >\r\n            {lang}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function translateMyText(text = \"\") {\r\n  const { languages } = languagesAndCodes;\r\n  const langIndex = localStorage.getItem(\"languageIndex\");\r\n  const lang = languages[langIndex];\r\n  const result = await translate(text, lang.code);\r\n  return result;\r\n}\r\n\r\nexport function WithTransLate({ text, isFunction }) {\r\n  const [translatedText, setTranslatedText] = useState(text);\r\n  translateMyText(text)\r\n    .then((res) => {\r\n      setTranslatedText(res);\r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n  return isFunction ? translatedText : <>{translatedText}</>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}