{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Desktop\\\\bluehouse\\\\src\\\\components\\\\PaymentPage\\\\PayPal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayPal(_ref) {\n  _s();\n\n  let {\n    price\n  } = _ref;\n  const [paid, setPaid] = useState(false);\n  const [error, setError] = useState(null);\n  const paypalRef = useRef(); // To show PayPal buttons once the component loads\n\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Your description\",\n            amount: {\n              currency_code: \"EUR\",\n              value: price\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        setPaid(true);\n        console.log(order);\n      },\n      onError: err => {\n        setError(err);\n        console.error(err);\n      }\n    }).render(paypalRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (paid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment successful.!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error Occurred in processing payment.! Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Total Amount in Euro : \", price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paypalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayPal, \"WhRGrLEcrHBowlL0LThqKKBsnTc=\");\n\n_c = PayPal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayPal\");","map":{"version":3,"sources":["C:/Users/Sandra/Desktop/bluehouse/src/components/PaymentPage/PayPal.js"],"names":["React","useState","useEffect","useRef","PayPal","price","paid","setPaid","error","setError","paypalRef","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;AAEA,eAAe,SAASC,MAAT,OAAyB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMS,SAAS,GAAGP,MAAM,EAAxB,CAHsC,CAKtC;;AACED,EAAAA,SAAS,CAAC,MAAM;AAChBS,IAAAA,MAAM,CAACC,MAAP,CACGC,OADH,CACW;AACPC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC9B,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AAC1BC,UAAAA,MAAM,EAAE,SADkB;AAE1BC,UAAAA,cAAc,EAAE,CACd;AACEC,YAAAA,WAAW,EAAE,kBADf;AAEEC,YAAAA,MAAM,EAAE;AACNC,cAAAA,aAAa,EAAE,KADT;AAENC,cAAAA,KAAK,EAAEnB;AAFD;AAFV,WADc;AAFU,SAArB,CAAP;AAYD,OAdM;AAePoB,MAAAA,SAAS,EAAE,OAAOV,IAAP,EAAaC,OAAb,KAAyB;AAClC,cAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;AACAnB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,OAnBM;AAoBPY,MAAAA,OAAO,EAAGC,GAAD,IAAS;AACdrB,QAAAA,QAAQ,CAACqB,GAAD,CAAR;AACAH,QAAAA,OAAO,CAACnB,KAAR,CAAcsB,GAAd;AACH;AAvBM,KADX,EA0BGC,MA1BH,CA0BUrB,SAAS,CAACsB,OA1BpB,EADgB,CA4BlB;AACC,GA7BU,EA6BR,EA7BQ,CAAT;;AA+BF,MAAI1B,IAAJ,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,4CAA4BH,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEK;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnDuBN,M;;KAAAA,M","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\n\r\nexport default function PayPal({price}) {\r\n  const [paid, setPaid] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const paypalRef = useRef();\r\n\r\n  // To show PayPal buttons once the component loads\r\n    useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Your description\",\r\n                amount: {\r\n                  currency_code: \"EUR\",\r\n                  value: price,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          setPaid(true);\r\n          console.log(order);\r\n        },\r\n        onError: (err) => {\r\n            setError(err);\r\n            console.error(err);\r\n        },\r\n      })\r\n      .render(paypalRef.current);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (paid) {\r\n    return <div>Payment successful.!</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error Occurred in processing payment.! Please try again.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Total Amount in Euro : {price} </h4>\r\n      <div ref={paypalRef} />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}