{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Desktop\\\\bluehouse\\\\src\\\\components\\\\map\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { legandItemsData, features } from \"./Elements\";\nimport upArrow from \"../../images/map/upArrow.svg\";\nimport \"../../Styles/Home.css\";\nimport \"../../Styles/Home.scss\";\nimport { Element } from \"react-scroll\";\nimport { WithTransLate } from \"../../translating/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"589px\"\n};\n\nconst Home = () => {\n  _s();\n\n  const mapRef = useRef(null); // eslint-disable-next-line no-unused-vars\n\n  const [position, setPosition] = React.useState({\n    lat: 64.147917,\n    lng: -21.952797\n  });\n\n  function handleLoad(map) {\n    mapRef.current = map;\n  }\n\n  const apiKey = \"AIzaSyCUHODQdM_bHGlEFtmbttq3O1xIB2rRz5E\";\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: apiKey\n  }); // eslint-disable-next-line no-unused-vars\n\n  const [map, setMap] = React.useState(null);\n  const [legend, setLegend] = React.useState(true);\n  const [weather, setWeather] = React.useState(undefined);\n  React.useEffect(() => {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Reykjavik&appid=ea5ec3c49c438a83e8c7e8719ff84445&units=metric\").then(resp => resp.json()).then(data => setWeather(data)).catch(err => alert(err.message));\n  }, [setWeather]);\n  const onUnmount = React.useCallback(map => setMap(null), [setMap]);\n  return /*#__PURE__*/_jsxDEV(Element, {\n    name: \"Map\",\n    id: \"map\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-root\",\n      children: [isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: position,\n        zoom: 13,\n        onLoad: handleLoad,\n        onUnmount: onUnmount,\n        children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          icon: feature.icon,\n          position: feature.position\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"legend\",\n        children: legend ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-button\",\n          onClick: () => setLegend(false),\n          children: [/*#__PURE__*/_jsxDEV(WithTransLate, {\n            text: \"Legend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: upArrow,\n            alt: \"arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-max-1\",\n            children: legandItemsData.map((_ref, i) => {\n              let {\n                src,\n                text,\n                position\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legand-item clickable\",\n                onClick: () => setPosition(position),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: src,\n                  alt: text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(WithTransLate, {\n                    text: text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clicked-legend-button\",\n            onClick: () => setLegend(true),\n            children: [/*#__PURE__*/_jsxDEV(WithTransLate, {\n              text: \"Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: upArrow,\n              alt: \"arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), /*#__PURE__*/_jsxDEV(WithTransLate, {\n              text: \"\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"city-icon\",\n            src: `https://openweathermap.org/img/wn/${weather.weather[0][\"icon\"]}@2x.png`,\n            alt: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"location\",\n            children: /*#__PURE__*/_jsxDEV(WithTransLate, {\n              text: \"Reykjavik, Iceland\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"A5cIYalBGvBOlZTL/844j/6D0Wk=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Sandra/Desktop/bluehouse/src/components/map/Map.js"],"names":["React","useRef","GoogleMap","useJsApiLoader","Marker","legandItemsData","features","Element","WithTransLate","containerStyle","width","height","Home","mapRef","position","setPosition","useState","lat","lng","handleLoad","map","current","apiKey","isLoaded","id","googleMapsApiKey","setMap","legend","setLegend","weather","setWeather","undefined","useEffect","fetch","then","resp","json","data","catch","err","alert","message","onUnmount","useCallback","feature","index","icon","upArrow","i","src","text","Math","round","main","temp"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\nimport { legandItemsData, features } from \"./Elements\";\r\nimport upArrow from \"../../images/map/upArrow.svg\";\r\nimport \"../../Styles/Home.css\";\r\nimport \"../../Styles/Home.scss\";\r\nimport { Element } from \"react-scroll\";\r\nimport { WithTransLate } from \"../../translating/index\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"589px\",\r\n};\r\n\r\nconst Home = () => {\r\n  const mapRef = useRef(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [position, setPosition] = React.useState({\r\n    lat: 64.147917,\r\n    lng: -21.952797,\r\n  });\r\n\r\n  function handleLoad(map) {\r\n    mapRef.current = map;\r\n  }\r\n\r\n  const apiKey = \"AIzaSyCUHODQdM_bHGlEFtmbttq3O1xIB2rRz5E\";\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: apiKey,\r\n  });\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [map, setMap] = React.useState(null);\r\n  const [legend, setLegend] = React.useState(true);\r\n  const [weather, setWeather] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=Reykjavik&appid=ea5ec3c49c438a83e8c7e8719ff84445&units=metric\"\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((data) => setWeather(data))\r\n      .catch((err) => alert(err.message));\r\n  }, [setWeather]);\r\n  const onUnmount = React.useCallback((map) => setMap(null), [setMap]);\r\n  return (\r\n    <Element name=\"Map\" id=\"map\">\r\n      <div className=\"map-root\">\r\n        {isLoaded ? (\r\n          <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={position}\r\n            zoom={13}\r\n            onLoad={handleLoad}\r\n            onUnmount={onUnmount}\r\n          >\r\n            {features.map((feature, index) => (\r\n              <Marker key={index} icon={feature.icon} position={feature.position} />\r\n            ))}\r\n          </GoogleMap>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <section className=\"legend\">\r\n          {legend ? (\r\n            <div className=\"legend-button\" onClick={() => setLegend(false)}>\r\n              <WithTransLate text=\"Legend\" />\r\n              <img src={upArrow} alt=\"arrow\" />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"legend-max-1\">\r\n                {legandItemsData.map(({ src, text, position }, i) => (\r\n                  <div\r\n                    className=\"legand-item clickable\"\r\n                    onClick={() => setPosition(position)}\r\n                    key={i}\r\n                  >\r\n                    <img src={src} alt={text} />\r\n                    <p>\r\n                      <WithTransLate text={text} />\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div\r\n                className=\"clicked-legend-button\"\r\n                onClick={() => setLegend(true)}\r\n              >\r\n                <WithTransLate text=\"Legend\" />{\" \"}\r\n                <img src={upArrow} alt=\"arrow\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n        {weather && (\r\n          <div className=\"weather center\">\r\n            <div className=\"center\">\r\n              <h2 className=\"temp\">\r\n                {Math.round(weather.main.temp)}\r\n                <WithTransLate text=\"°C\" />\r\n              </h2>\r\n              <img\r\n                className=\"city-icon\"\r\n                src={`https://openweathermap.org/img/wn/${weather.weather[0][\"icon\"]}@2x.png`}\r\n                alt=\"map\"\r\n              />\r\n              <h4 className=\"location\">\r\n                <WithTransLate text=\"Reykjavik, Iceland\" />\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}